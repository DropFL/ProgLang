// Generated from x:\Programming\Project\JAVA\ProgLang\Kotlin2Java/KotlinLexer.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KotlinLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WS=1, SNGL_CMNT=2, MLTI_CMNT=3, PACKAGE=4, IMPORT=5, FUN=6, VAR=7, VAL=8, 
		RETURN=9, IF=10, ELSE=11, FOR=12, DOWNTO=13, STEP=14, NULL=15, TRUE=16, 
		FALSE=17, THIS=18, CONTINUE=19, BREAK=20, OVERRIDE=21, PUBLIC=22, PRIVATE=23, 
		INTERNAL=24, PROTECTED=25, ABSTRACT=26, FINAL=27, OPEN=28, DBLE_Q=29, 
		IS=30, NOT_IS=31, IN=32, NOT_IN=33, CASE=34, ELVIS=35, ALL=36, INCR=37, 
		DECR=38, PLUS_ASSN=39, MINUS_ASSN=40, MULTI_ASSN=41, DIVIDE_ASSN=42, REMAIN_ASSN=43, 
		PLUS=44, MINUS=45, MULTI=46, DIVIDE=47, REMAIN=48, COLON=49, COMMA=50, 
		RANGE=51, DOT=52, NEGATE=53, AND=54, OR=55, REF_EQUAL=56, REF_NEQUAL=57, 
		EQUAL=58, NEQUAL=59, GRTR_EQ=60, GRTR=61, LESS_EQ=62, LESS=63, QUESTION=64, 
		L_PAREN=65, R_PAREN=66, L_BRACKET=67, R_BRACKET=68, SNGL_Q=69, R_BRACE=70, 
		L_BRACE=71, ASSIGN=72, ID=73, NL=74, SEMICOLON=75, REAL=76, INT=77, BOOL=78, 
		SINGLE_CH=79, CHAR=80;
	public static final int
		PACK_DEF=1, IMPORT_DEF=2;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE", "PACK_DEF", "IMPORT_DEF"
	};

	public static final String[] ruleNames = {
		"WS", "SNGL_CMNT", "MLTI_CMNT", "PACKAGE", "IMPORT", "FUN", "VAR", "VAL", 
		"RETURN", "IF", "ELSE", "FOR", "DOWNTO", "STEP", "NULL", "TRUE", "FALSE", 
		"THIS", "CONTINUE", "BREAK", "OVERRIDE", "PUBLIC", "PRIVATE", "INTERNAL", 
		"PROTECTED", "ABSTRACT", "FINAL", "OPEN", "DBLE_Q", "IS", "NOT_IS", "IN", 
		"NOT_IN", "CASE", "ELVIS", "ALL", "INCR", "DECR", "PLUS_ASSN", "MINUS_ASSN", 
		"MULTI_ASSN", "DIVIDE_ASSN", "REMAIN_ASSN", "PLUS", "MINUS", "MULTI", 
		"DIVIDE", "REMAIN", "COLON", "COMMA", "RANGE", "DOT", "NEGATE", "AND", 
		"OR", "REF_EQUAL", "REF_NEQUAL", "EQUAL", "NEQUAL", "GRTR_EQ", "GRTR", 
		"LESS_EQ", "LESS", "QUESTION", "L_PAREN", "R_PAREN", "L_BRACKET", "R_BRACKET", 
		"SNGL_Q", "R_BRACE", "L_BRACE", "ASSIGN", "ID", "NL", "SEMICOLON", "REAL", 
		"INT", "BOOL", "SINGLE_CH", "CHAR", "SUF_LONG", "SUF_FLOAT", "HEX_DIGIT", 
		"DIGIT", "PACK_ID", "PACK_DOT", "PACK_NL", "PACK_SEMI", "IMPORT_ID", "IMPORT_DOT", 
		"IMPORT_ALL", "IMPORT_NL", "IMPORT_SEMI"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, "'package '", "'import '", "'fun'", "'var'", "'val'", 
		"'return'", "'if'", "'else'", "'for'", "'downTo'", "'step'", "'null'", 
		"'true'", "'false'", "'this'", "'continue'", "'break'", "'override'", 
		"'public'", "'private'", "'internal'", "'protected'", "'abstract'", "'final'", 
		"'open'", "'\"'", "'is'", "'!is'", "'in'", "'!in'", "'->'", "'?:'", "'.*'", 
		"'++'", "'--'", "'+='", "'-='", "'*='", "'/='", "'%='", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "':'", "','", "'..'", "'.'", "'!'", "'&&'", "'||'", 
		"'==='", "'!=='", "'=='", "'!='", "'>='", "'>'", "'<='", "'<'", "'?'", 
		"'('", "')'", "'['", "']'", "'''", "'}'", "'{'", "'='", null, null, "';'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "WS", "SNGL_CMNT", "MLTI_CMNT", "PACKAGE", "IMPORT", "FUN", "VAR", 
		"VAL", "RETURN", "IF", "ELSE", "FOR", "DOWNTO", "STEP", "NULL", "TRUE", 
		"FALSE", "THIS", "CONTINUE", "BREAK", "OVERRIDE", "PUBLIC", "PRIVATE", 
		"INTERNAL", "PROTECTED", "ABSTRACT", "FINAL", "OPEN", "DBLE_Q", "IS", 
		"NOT_IS", "IN", "NOT_IN", "CASE", "ELVIS", "ALL", "INCR", "DECR", "PLUS_ASSN", 
		"MINUS_ASSN", "MULTI_ASSN", "DIVIDE_ASSN", "REMAIN_ASSN", "PLUS", "MINUS", 
		"MULTI", "DIVIDE", "REMAIN", "COLON", "COMMA", "RANGE", "DOT", "NEGATE", 
		"AND", "OR", "REF_EQUAL", "REF_NEQUAL", "EQUAL", "NEQUAL", "GRTR_EQ", 
		"GRTR", "LESS_EQ", "LESS", "QUESTION", "L_PAREN", "R_PAREN", "L_BRACKET", 
		"R_BRACKET", "SNGL_Q", "R_BRACE", "L_BRACE", "ASSIGN", "ID", "NL", "SEMICOLON", 
		"REAL", "INT", "BOOL", "SINGLE_CH", "CHAR"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KotlinLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KotlinLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2R\u026c\b\1\b\1\b"+
		"\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n"+
		"\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21"+
		"\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30"+
		"\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37"+
		"\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t"+
		"*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63"+
		"\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t"+
		"<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4"+
		"H\tH\4I\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\t"+
		"S\4T\tT\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^"+
		"\3\2\6\2\u00c1\n\2\r\2\16\2\u00c2\3\2\3\2\3\3\3\3\3\3\3\3\7\3\u00cb\n"+
		"\3\f\3\16\3\u00ce\13\3\3\3\3\3\3\4\3\4\3\4\3\4\7\4\u00d6\n\4\f\4\16\4"+
		"\u00d9\13\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3"+
		"\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b"+
		"\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3"+
		"\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		"!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3"+
		"\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3.\3.\3/\3/\3\60"+
		"\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66"+
		"\3\67\3\67\3\67\38\38\38\39\39\39\39\3:\3:\3:\3:\3;\3;\3;\3<\3<\3<\3="+
		"\3=\3=\3>\3>\3?\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G"+
		"\3H\3H\3I\3I\3J\3J\7J\u01f8\nJ\fJ\16J\u01fb\13J\3K\5K\u01fe\nK\3K\6K\u0201"+
		"\nK\rK\16K\u0202\3L\3L\3M\7M\u0208\nM\fM\16M\u020b\13M\3M\3M\6M\u020f"+
		"\nM\rM\16M\u0210\3M\5M\u0214\nM\3M\6M\u0217\nM\rM\16M\u0218\3M\5M\u021c"+
		"\nM\5M\u021e\nM\3N\6N\u0221\nN\rN\16N\u0222\3N\5N\u0226\nN\3O\3O\5O\u022a"+
		"\nO\3P\3P\3P\3P\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\3Q\5Q\u023b\nQ\3R\3R\3S"+
		"\3S\3T\3T\3U\3U\3V\3V\3V\3V\3W\3W\3W\3W\3X\3X\3X\3X\3X\3Y\3Y\3Y\3Y\3Y"+
		"\3Z\3Z\3Z\3Z\3[\3[\3[\3[\3\\\3\\\3\\\3\\\3]\3]\3]\3]\3]\3^\3^\3^\3^\3"+
		"^\3\u00d7\2_\5\3\7\4\t\5\13\6\r\7\17\b\21\t\23\n\25\13\27\f\31\r\33\16"+
		"\35\17\37\20!\21#\22%\23\'\24)\25+\26-\27/\30\61\31\63\32\65\33\67\34"+
		"9\35;\36=\37? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_\60a\61c\62e\63g\64i\65"+
		"k\66m\67o8q9s:u;w<y={>}?\177@\u0081A\u0083B\u0085C\u0087D\u0089E\u008b"+
		"F\u008dG\u008fH\u0091I\u0093J\u0095K\u0097L\u0099M\u009bN\u009dO\u009f"+
		"P\u00a1Q\u00a3R\u00a5\2\u00a7\2\u00a9\2\u00ab\2\u00ad\2\u00af\2\u00b1"+
		"\2\u00b3\2\u00b5\2\u00b7\2\u00b9\2\u00bb\2\u00bd\2\5\2\3\4\f\4\2\13\13"+
		"\"\"\4\2\f\f\17\17\4\2C\\c|\5\2\62;C\\c|\6\2\f\f\17\17&&^^\3\2ww\4\2N"+
		"Nnn\4\2HHhh\5\2\62;CHch\3\2\62;\2\u0276\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3"+
		"\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2"+
		"\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37"+
		"\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3"+
		"\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2"+
		"\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C"+
		"\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2"+
		"\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2"+
		"\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i"+
		"\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2"+
		"\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2"+
		"\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093"+
		"\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2"+
		"\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\3\u00ad"+
		"\3\2\2\2\3\u00af\3\2\2\2\3\u00b1\3\2\2\2\3\u00b3\3\2\2\2\4\u00b5\3\2\2"+
		"\2\4\u00b7\3\2\2\2\4\u00b9\3\2\2\2\4\u00bb\3\2\2\2\4\u00bd\3\2\2\2\5\u00c0"+
		"\3\2\2\2\7\u00c6\3\2\2\2\t\u00d1\3\2\2\2\13\u00df\3\2\2\2\r\u00ea\3\2"+
		"\2\2\17\u00f4\3\2\2\2\21\u00f8\3\2\2\2\23\u00fc\3\2\2\2\25\u0100\3\2\2"+
		"\2\27\u0107\3\2\2\2\31\u010a\3\2\2\2\33\u010f\3\2\2\2\35\u0113\3\2\2\2"+
		"\37\u011a\3\2\2\2!\u011f\3\2\2\2#\u0124\3\2\2\2%\u0129\3\2\2\2\'\u012f"+
		"\3\2\2\2)\u0134\3\2\2\2+\u013d\3\2\2\2-\u0143\3\2\2\2/\u014c\3\2\2\2\61"+
		"\u0153\3\2\2\2\63\u015b\3\2\2\2\65\u0164\3\2\2\2\67\u016e\3\2\2\29\u0177"+
		"\3\2\2\2;\u017d\3\2\2\2=\u0182\3\2\2\2?\u0184\3\2\2\2A\u0187\3\2\2\2C"+
		"\u018b\3\2\2\2E\u018e\3\2\2\2G\u0192\3\2\2\2I\u0195\3\2\2\2K\u0198\3\2"+
		"\2\2M\u019b\3\2\2\2O\u019e\3\2\2\2Q\u01a1\3\2\2\2S\u01a4\3\2\2\2U\u01a7"+
		"\3\2\2\2W\u01aa\3\2\2\2Y\u01ad\3\2\2\2[\u01b0\3\2\2\2]\u01b2\3\2\2\2_"+
		"\u01b4\3\2\2\2a\u01b6\3\2\2\2c\u01b8\3\2\2\2e\u01ba\3\2\2\2g\u01bc\3\2"+
		"\2\2i\u01be\3\2\2\2k\u01c1\3\2\2\2m\u01c3\3\2\2\2o\u01c5\3\2\2\2q\u01c8"+
		"\3\2\2\2s\u01cb\3\2\2\2u\u01cf\3\2\2\2w\u01d3\3\2\2\2y\u01d6\3\2\2\2{"+
		"\u01d9\3\2\2\2}\u01dc\3\2\2\2\177\u01de\3\2\2\2\u0081\u01e1\3\2\2\2\u0083"+
		"\u01e3\3\2\2\2\u0085\u01e5\3\2\2\2\u0087\u01e7\3\2\2\2\u0089\u01e9\3\2"+
		"\2\2\u008b\u01eb\3\2\2\2\u008d\u01ed\3\2\2\2\u008f\u01ef\3\2\2\2\u0091"+
		"\u01f1\3\2\2\2\u0093\u01f3\3\2\2\2\u0095\u01f5\3\2\2\2\u0097\u0200\3\2"+
		"\2\2\u0099\u0204\3\2\2\2\u009b\u021d\3\2\2\2\u009d\u0220\3\2\2\2\u009f"+
		"\u0229\3\2\2\2\u00a1\u022b\3\2\2\2\u00a3\u023a\3\2\2\2\u00a5\u023c\3\2"+
		"\2\2\u00a7\u023e\3\2\2\2\u00a9\u0240\3\2\2\2\u00ab\u0242\3\2\2\2\u00ad"+
		"\u0244\3\2\2\2\u00af\u0248\3\2\2\2\u00b1\u024c\3\2\2\2\u00b3\u0251\3\2"+
		"\2\2\u00b5\u0256\3\2\2\2\u00b7\u025a\3\2\2\2\u00b9\u025e\3\2\2\2\u00bb"+
		"\u0262\3\2\2\2\u00bd\u0267\3\2\2\2\u00bf\u00c1\t\2\2\2\u00c0\u00bf\3\2"+
		"\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00c0\3\2\2\2\u00c2\u00c3\3\2\2\2\u00c3"+
		"\u00c4\3\2\2\2\u00c4\u00c5\b\2\2\2\u00c5\6\3\2\2\2\u00c6\u00c7\7\61\2"+
		"\2\u00c7\u00c8\7\61\2\2\u00c8\u00cc\3\2\2\2\u00c9\u00cb\n\3\2\2\u00ca"+
		"\u00c9\3\2\2\2\u00cb\u00ce\3\2\2\2\u00cc\u00ca\3\2\2\2\u00cc\u00cd\3\2"+
		"\2\2\u00cd\u00cf\3\2\2\2\u00ce\u00cc\3\2\2\2\u00cf\u00d0\b\3\2\2\u00d0"+
		"\b\3\2\2\2\u00d1\u00d2\7\61\2\2\u00d2\u00d3\7,\2\2\u00d3\u00d7\3\2\2\2"+
		"\u00d4\u00d6\13\2\2\2\u00d5\u00d4\3\2\2\2\u00d6\u00d9\3\2\2\2\u00d7\u00d8"+
		"\3\2\2\2\u00d7\u00d5\3\2\2\2\u00d8\u00da\3\2\2\2\u00d9\u00d7\3\2\2\2\u00da"+
		"\u00db\7,\2\2\u00db\u00dc\7\61\2\2\u00dc\u00dd\3\2\2\2\u00dd\u00de\b\4"+
		"\2\2\u00de\n\3\2\2\2\u00df\u00e0\7r\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2"+
		"\7e\2\2\u00e2\u00e3\7m\2\2\u00e3\u00e4\7c\2\2\u00e4\u00e5\7i\2\2\u00e5"+
		"\u00e6\7g\2\2\u00e6\u00e7\7\"\2\2\u00e7\u00e8\3\2\2\2\u00e8\u00e9\b\5"+
		"\3\2\u00e9\f\3\2\2\2\u00ea\u00eb\7k\2\2\u00eb\u00ec\7o\2\2\u00ec\u00ed"+
		"\7r\2\2\u00ed\u00ee\7q\2\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7v\2\2\u00f0"+
		"\u00f1\7\"\2\2\u00f1\u00f2\3\2\2\2\u00f2\u00f3\b\6\4\2\u00f3\16\3\2\2"+
		"\2\u00f4\u00f5\7h\2\2\u00f5\u00f6\7w\2\2\u00f6\u00f7\7p\2\2\u00f7\20\3"+
		"\2\2\2\u00f8\u00f9\7x\2\2\u00f9\u00fa\7c\2\2\u00fa\u00fb\7t\2\2\u00fb"+
		"\22\3\2\2\2\u00fc\u00fd\7x\2\2\u00fd\u00fe\7c\2\2\u00fe\u00ff\7n\2\2\u00ff"+
		"\24\3\2\2\2\u0100\u0101\7t\2\2\u0101\u0102\7g\2\2\u0102\u0103\7v\2\2\u0103"+
		"\u0104\7w\2\2\u0104\u0105\7t\2\2\u0105\u0106\7p\2\2\u0106\26\3\2\2\2\u0107"+
		"\u0108\7k\2\2\u0108\u0109\7h\2\2\u0109\30\3\2\2\2\u010a\u010b\7g\2\2\u010b"+
		"\u010c\7n\2\2\u010c\u010d\7u\2\2\u010d\u010e\7g\2\2\u010e\32\3\2\2\2\u010f"+
		"\u0110\7h\2\2\u0110\u0111\7q\2\2\u0111\u0112\7t\2\2\u0112\34\3\2\2\2\u0113"+
		"\u0114\7f\2\2\u0114\u0115\7q\2\2\u0115\u0116\7y\2\2\u0116\u0117\7p\2\2"+
		"\u0117\u0118\7V\2\2\u0118\u0119\7q\2\2\u0119\36\3\2\2\2\u011a\u011b\7"+
		"u\2\2\u011b\u011c\7v\2\2\u011c\u011d\7g\2\2\u011d\u011e\7r\2\2\u011e "+
		"\3\2\2\2\u011f\u0120\7p\2\2\u0120\u0121\7w\2\2\u0121\u0122\7n\2\2\u0122"+
		"\u0123\7n\2\2\u0123\"\3\2\2\2\u0124\u0125\7v\2\2\u0125\u0126\7t\2\2\u0126"+
		"\u0127\7w\2\2\u0127\u0128\7g\2\2\u0128$\3\2\2\2\u0129\u012a\7h\2\2\u012a"+
		"\u012b\7c\2\2\u012b\u012c\7n\2\2\u012c\u012d\7u\2\2\u012d\u012e\7g\2\2"+
		"\u012e&\3\2\2\2\u012f\u0130\7v\2\2\u0130\u0131\7j\2\2\u0131\u0132\7k\2"+
		"\2\u0132\u0133\7u\2\2\u0133(\3\2\2\2\u0134\u0135\7e\2\2\u0135\u0136\7"+
		"q\2\2\u0136\u0137\7p\2\2\u0137\u0138\7v\2\2\u0138\u0139\7k\2\2\u0139\u013a"+
		"\7p\2\2\u013a\u013b\7w\2\2\u013b\u013c\7g\2\2\u013c*\3\2\2\2\u013d\u013e"+
		"\7d\2\2\u013e\u013f\7t\2\2\u013f\u0140\7g\2\2\u0140\u0141\7c\2\2\u0141"+
		"\u0142\7m\2\2\u0142,\3\2\2\2\u0143\u0144\7q\2\2\u0144\u0145\7x\2\2\u0145"+
		"\u0146\7g\2\2\u0146\u0147\7t\2\2\u0147\u0148\7t\2\2\u0148\u0149\7k\2\2"+
		"\u0149\u014a\7f\2\2\u014a\u014b\7g\2\2\u014b.\3\2\2\2\u014c\u014d\7r\2"+
		"\2\u014d\u014e\7w\2\2\u014e\u014f\7d\2\2\u014f\u0150\7n\2\2\u0150\u0151"+
		"\7k\2\2\u0151\u0152\7e\2\2\u0152\60\3\2\2\2\u0153\u0154\7r\2\2\u0154\u0155"+
		"\7t\2\2\u0155\u0156\7k\2\2\u0156\u0157\7x\2\2\u0157\u0158\7c\2\2\u0158"+
		"\u0159\7v\2\2\u0159\u015a\7g\2\2\u015a\62\3\2\2\2\u015b\u015c\7k\2\2\u015c"+
		"\u015d\7p\2\2\u015d\u015e\7v\2\2\u015e\u015f\7g\2\2\u015f\u0160\7t\2\2"+
		"\u0160\u0161\7p\2\2\u0161\u0162\7c\2\2\u0162\u0163\7n\2\2\u0163\64\3\2"+
		"\2\2\u0164\u0165\7r\2\2\u0165\u0166\7t\2\2\u0166\u0167\7q\2\2\u0167\u0168"+
		"\7v\2\2\u0168\u0169\7g\2\2\u0169\u016a\7e\2\2\u016a\u016b\7v\2\2\u016b"+
		"\u016c\7g\2\2\u016c\u016d\7f\2\2\u016d\66\3\2\2\2\u016e\u016f\7c\2\2\u016f"+
		"\u0170\7d\2\2\u0170\u0171\7u\2\2\u0171\u0172\7v\2\2\u0172\u0173\7t\2\2"+
		"\u0173\u0174\7c\2\2\u0174\u0175\7e\2\2\u0175\u0176\7v\2\2\u01768\3\2\2"+
		"\2\u0177\u0178\7h\2\2\u0178\u0179\7k\2\2\u0179\u017a\7p\2\2\u017a\u017b"+
		"\7c\2\2\u017b\u017c\7n\2\2\u017c:\3\2\2\2\u017d\u017e\7q\2\2\u017e\u017f"+
		"\7r\2\2\u017f\u0180\7g\2\2\u0180\u0181\7p\2\2\u0181<\3\2\2\2\u0182\u0183"+
		"\7$\2\2\u0183>\3\2\2\2\u0184\u0185\7k\2\2\u0185\u0186\7u\2\2\u0186@\3"+
		"\2\2\2\u0187\u0188\7#\2\2\u0188\u0189\7k\2\2\u0189\u018a\7u\2\2\u018a"+
		"B\3\2\2\2\u018b\u018c\7k\2\2\u018c\u018d\7p\2\2\u018dD\3\2\2\2\u018e\u018f"+
		"\7#\2\2\u018f\u0190\7k\2\2\u0190\u0191\7p\2\2\u0191F\3\2\2\2\u0192\u0193"+
		"\7/\2\2\u0193\u0194\7@\2\2\u0194H\3\2\2\2\u0195\u0196\7A\2\2\u0196\u0197"+
		"\7<\2\2\u0197J\3\2\2\2\u0198\u0199\7\60\2\2\u0199\u019a\7,\2\2\u019aL"+
		"\3\2\2\2\u019b\u019c\7-\2\2\u019c\u019d\7-\2\2\u019dN\3\2\2\2\u019e\u019f"+
		"\7/\2\2\u019f\u01a0\7/\2\2\u01a0P\3\2\2\2\u01a1\u01a2\7-\2\2\u01a2\u01a3"+
		"\7?\2\2\u01a3R\3\2\2\2\u01a4\u01a5\7/\2\2\u01a5\u01a6\7?\2\2\u01a6T\3"+
		"\2\2\2\u01a7\u01a8\7,\2\2\u01a8\u01a9\7?\2\2\u01a9V\3\2\2\2\u01aa\u01ab"+
		"\7\61\2\2\u01ab\u01ac\7?\2\2\u01acX\3\2\2\2\u01ad\u01ae\7\'\2\2\u01ae"+
		"\u01af\7?\2\2\u01afZ\3\2\2\2\u01b0\u01b1\7-\2\2\u01b1\\\3\2\2\2\u01b2"+
		"\u01b3\7/\2\2\u01b3^\3\2\2\2\u01b4\u01b5\7,\2\2\u01b5`\3\2\2\2\u01b6\u01b7"+
		"\7\61\2\2\u01b7b\3\2\2\2\u01b8\u01b9\7\'\2\2\u01b9d\3\2\2\2\u01ba\u01bb"+
		"\7<\2\2\u01bbf\3\2\2\2\u01bc\u01bd\7.\2\2\u01bdh\3\2\2\2\u01be\u01bf\7"+
		"\60\2\2\u01bf\u01c0\7\60\2\2\u01c0j\3\2\2\2\u01c1\u01c2\7\60\2\2\u01c2"+
		"l\3\2\2\2\u01c3\u01c4\7#\2\2\u01c4n\3\2\2\2\u01c5\u01c6\7(\2\2\u01c6\u01c7"+
		"\7(\2\2\u01c7p\3\2\2\2\u01c8\u01c9\7~\2\2\u01c9\u01ca\7~\2\2\u01car\3"+
		"\2\2\2\u01cb\u01cc\7?\2\2\u01cc\u01cd\7?\2\2\u01cd\u01ce\7?\2\2\u01ce"+
		"t\3\2\2\2\u01cf\u01d0\7#\2\2\u01d0\u01d1\7?\2\2\u01d1\u01d2\7?\2\2\u01d2"+
		"v\3\2\2\2\u01d3\u01d4\7?\2\2\u01d4\u01d5\7?\2\2\u01d5x\3\2\2\2\u01d6\u01d7"+
		"\7#\2\2\u01d7\u01d8\7?\2\2\u01d8z\3\2\2\2\u01d9\u01da\7@\2\2\u01da\u01db"+
		"\7?\2\2\u01db|\3\2\2\2\u01dc\u01dd\7@\2\2\u01dd~\3\2\2\2\u01de\u01df\7"+
		">\2\2\u01df\u01e0\7?\2\2\u01e0\u0080\3\2\2\2\u01e1\u01e2\7>\2\2\u01e2"+
		"\u0082\3\2\2\2\u01e3\u01e4\7A\2\2\u01e4\u0084\3\2\2\2\u01e5\u01e6\7*\2"+
		"\2\u01e6\u0086\3\2\2\2\u01e7\u01e8\7+\2\2\u01e8\u0088\3\2\2\2\u01e9\u01ea"+
		"\7]\2\2\u01ea\u008a\3\2\2\2\u01eb\u01ec\7_\2\2\u01ec\u008c\3\2\2\2\u01ed"+
		"\u01ee\7)\2\2\u01ee\u008e\3\2\2\2\u01ef\u01f0\7\177\2\2\u01f0\u0090\3"+
		"\2\2\2\u01f1\u01f2\7}\2\2\u01f2\u0092\3\2\2\2\u01f3\u01f4\7?\2\2\u01f4"+
		"\u0094\3\2\2\2\u01f5\u01f9\t\4\2\2\u01f6\u01f8\t\5\2\2\u01f7\u01f6\3\2"+
		"\2\2\u01f8\u01fb\3\2\2\2\u01f9\u01f7\3\2\2\2\u01f9\u01fa\3\2\2\2\u01fa"+
		"\u0096\3\2\2\2\u01fb\u01f9\3\2\2\2\u01fc\u01fe\7\17\2\2\u01fd\u01fc\3"+
		"\2\2\2\u01fd\u01fe\3\2\2\2\u01fe\u01ff\3\2\2\2\u01ff\u0201\7\f\2\2\u0200"+
		"\u01fd\3\2\2\2\u0201\u0202\3\2\2\2\u0202\u0200\3\2\2\2\u0202\u0203\3\2"+
		"\2\2\u0203\u0098\3\2\2\2\u0204\u0205\7=\2\2\u0205\u009a\3\2\2\2\u0206"+
		"\u0208\5\u00abU\2\u0207\u0206\3\2\2\2\u0208\u020b\3\2\2\2\u0209\u0207"+
		"\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u020c\3\2\2\2\u020b\u0209\3\2\2\2\u020c"+
		"\u020e\5k\65\2\u020d\u020f\5\u00abU\2\u020e\u020d\3\2\2\2\u020f\u0210"+
		"\3\2\2\2\u0210\u020e\3\2\2\2\u0210\u0211\3\2\2\2\u0211\u0213\3\2\2\2\u0212"+
		"\u0214\5\u00a7S\2\u0213\u0212\3\2\2\2\u0213\u0214\3\2\2\2\u0214\u021e"+
		"\3\2\2\2\u0215\u0217\5\u00abU\2\u0216\u0215\3\2\2\2\u0217\u0218\3\2\2"+
		"\2\u0218\u0216\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u021b\3\2\2\2\u021a\u021c"+
		"\5\u00a7S\2\u021b\u021a\3\2\2\2\u021b\u021c\3\2\2\2\u021c\u021e\3\2\2"+
		"\2\u021d\u0209\3\2\2\2\u021d\u0216\3\2\2\2\u021e\u009c\3\2\2\2\u021f\u0221"+
		"\5\u00abU\2\u0220\u021f\3\2\2\2\u0221\u0222\3\2\2\2\u0222\u0220\3\2\2"+
		"\2\u0222\u0223\3\2\2\2\u0223\u0225\3\2\2\2\u0224\u0226\5\u00a5R\2\u0225"+
		"\u0224\3\2\2\2\u0225\u0226\3\2\2\2\u0226\u009e\3\2\2\2\u0227\u022a\5#"+
		"\21\2\u0228\u022a\5%\22\2\u0229\u0227\3\2\2\2\u0229\u0228\3\2\2\2\u022a"+
		"\u00a0\3\2\2\2\u022b\u022c\5\u008dF\2\u022c\u022d\5\u00a3Q\2\u022d\u022e"+
		"\5\u008dF\2\u022e\u00a2\3\2\2\2\u022f\u023b\n\6\2\2\u0230\u0231\7^\2\2"+
		"\u0231\u023b\n\7\2\2\u0232\u0233\7^\2\2\u0233\u0234\7w\2\2\u0234\u0235"+
		"\3\2\2\2\u0235\u0236\5\u00a9T\2\u0236\u0237\5\u00a9T\2\u0237\u0238\5\u00a9"+
		"T\2\u0238\u0239\5\u00a9T\2\u0239\u023b\3\2\2\2\u023a\u022f\3\2\2\2\u023a"+
		"\u0230\3\2\2\2\u023a\u0232\3\2\2\2\u023b\u00a4\3\2\2\2\u023c\u023d\t\b"+
		"\2\2\u023d\u00a6\3\2\2\2\u023e\u023f\t\t\2\2\u023f\u00a8\3\2\2\2\u0240"+
		"\u0241\t\n\2\2\u0241\u00aa\3\2\2\2\u0242\u0243\t\13\2\2\u0243\u00ac\3"+
		"\2\2\2\u0244\u0245\5\u0095J\2\u0245\u0246\3\2\2\2\u0246\u0247\bV\5\2\u0247"+
		"\u00ae\3\2\2\2\u0248\u0249\5k\65\2\u0249\u024a\3\2\2\2\u024a\u024b\bW"+
		"\6\2\u024b\u00b0\3\2\2\2\u024c\u024d\5\u0097K\2\u024d\u024e\3\2\2\2\u024e"+
		"\u024f\bX\7\2\u024f\u0250\bX\b\2\u0250\u00b2\3\2\2\2\u0251\u0252\5\u0099"+
		"L\2\u0252\u0253\3\2\2\2\u0253\u0254\bY\t\2\u0254\u0255\bY\b\2\u0255\u00b4"+
		"\3\2\2\2\u0256\u0257\5\u0095J\2\u0257\u0258\3\2\2\2\u0258\u0259\bZ\5\2"+
		"\u0259\u00b6\3\2\2\2\u025a\u025b\5k\65\2\u025b\u025c\3\2\2\2\u025c\u025d"+
		"\b[\6\2\u025d\u00b8\3\2\2\2\u025e\u025f\5K%\2\u025f\u0260\3\2\2\2\u0260"+
		"\u0261\b\\\n\2\u0261\u00ba\3\2\2\2\u0262\u0263\5\u0097K\2\u0263\u0264"+
		"\3\2\2\2\u0264\u0265\b]\7\2\u0265\u0266\b]\b\2\u0266\u00bc\3\2\2\2\u0267"+
		"\u0268\5\u0099L\2\u0268\u0269\3\2\2\2\u0269\u026a\b^\t\2\u026a\u026b\b"+
		"^\b\2\u026b\u00be\3\2\2\2\25\2\3\4\u00c2\u00cc\u00d7\u01f9\u01fd\u0202"+
		"\u0209\u0210\u0213\u0218\u021b\u021d\u0222\u0225\u0229\u023a\13\2\3\2"+
		"\7\3\2\7\4\2\tK\2\t\66\2\tL\2\6\2\2\tM\2\t&\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}